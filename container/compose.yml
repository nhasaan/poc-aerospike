name: aerospike-benchmarks-app

services:
  app:
    build:
      context: ../
      dockerfile: container/benchmarks-app/Dockerfile
    container_name: benchmarks-app
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AEROSPIKE_HOST=aerospike
      - AEROSPIKE_PORT=3000
    depends_on:
      redis:
        condition: service_healthy
      aerospike:
        condition: service_healthy
    volumes:
      - ../source/benchmarks-app:/app/source
      - ../source/benchmarks-app/node_modules:/app/source/node_modules
    networks:
      - benchmarks-net
    command: yarn start

  redis:
    image: redis:7-alpine
    container_name: redis-server
    ports:
      - "6381:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - benchmarks-net
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  aerospike:
    image: aerospike/aerospike-server:6.4.0.7
    container_name: aerospike-server
    ports:
      - "3003:3000"
      - "3001:3001"
      - "3002:3002"
    volumes:
      - aerospike-data:/opt/aerospike/data
      - ./aerospike.conf:/opt/aerospike/etc/aerospike.conf
    networks:
      - benchmarks-net
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "asinfo", "-v", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  benchmarks-net:
    name: benchmarks-net
    driver: bridge

volumes:
  redis-data:
    name: redis-data
  aerospike-data:
    name: aerospike-data